# @host= http://127.0.0.1:8080
# @host= http://192.168.15.124:8080
@host= http://192.168.15.54:8080

### =============================================================================
### 設備管理 API (Device Management)
### =============================================================================

### 取得資訊
GET {{host}}/api/sysinfo HTTP/1.1

### 取得所有設備資訊
GET {{host}}/api/devices HTTP/1.1

### 啟動設備
POST {{host}}/api/devices/SIM_001/start HTTP/1.1
content-type: application/json

### 停止設備
POST {{host}}/api/devices/SIM_001/stop HTTP/1.1
content-type: application/json

### 新增 Modbus TCP 設備
POST {{host}}/api/devices HTTP/1.1
content-type: application/json

{
  "name": "SIM_Sean",
  "ip": "192.168.15.99",
  "port": 1502,
  "protocol": "modbus_tcp",
  "enable": false,
  "timeout": 1000,
  "retry": 2,
  "interval": 1000
}


### 新增 SNMP 設備
POST {{host}}/api/devices HTTP/1.1
content-type: application/json

{
  "name": "SNMP_DEVICE",
  "ip": "192.168.15.100",
  "port": 161,
  "protocol": "snmp",
  "community": "public",
  "enable": false
}

### 新增 Modbus RTU 設備
POST {{host}}/api/devices HTTP/1.1
content-type: application/json

{
  "name": "RTU_DEVICE",
  "protocol": "modbus_rtu",
  "com": "/dev/ttyUSB0",
  "baudrate": 9600,
  "databits": 8,
  "parity": "N",
  "stopbits": 1,
  "enable": false
}

### 更新設備
PUT {{host}}/api/devices/PLC HTTP/1.1
content-type: application/json

{
  "name": "PLC",
  "ip": "192.168.15.51",
  "port": 502,
  "protocol": "modbus_tcp",
  "enable": true
}

### 刪除設備
DELETE {{host}}/api/devices/PLC_2 HTTP/1.1

### =============================================================================
### 注意事項 (Important Notes)
### =============================================================================
# 1. 設備管理 (devices) 和任務管理 (tasks) 是分開的
# 2. 設備只包含連線資訊，任務包含具體的讀取/寫入操作
# 3. 任務與設備透過 UUID 進行關聯
# 4. 任務儲存在 pttasks.json，設備儲存在 devices.json
# 5. 虛擬點位儲存在 points.json

### =============================================================================
### 虛擬點位管理 API (Virtual Points Management)  
### =============================================================================

### 取得所有虛擬點位
GET {{host}}/api/points HTTP/1.1

### 取得虛擬點位值
GET {{host}}/api/vpoints HTTP/1.1

### 取得虛擬點位值
GET {{host}}/api/modbustb HTTP/1.1


### 取得可用的虛擬點位 UUID（預設取得1個）
GET {{host}}/api/avpoints HTTP/1.1

### 取得2個可用的虛擬點位 UUID
GET {{host}}/api/avpoints?count=2 HTTP/1.1

//TODO 不能隨機給要依照順序

### 取得5個可用的虛擬點位 UUID
GET {{host}}/api/avpoints?count=5 HTTP/1.1

### 取得10個可用的虛擬點位 UUID
GET {{host}}/api/avpoints?count=10 HTTP/1.1

### 根據 UUID 取得單一虛擬點位
GET {{host}}/api/points/4c3cd3e5-17ff-4b73-bee1-4613cabc561a HTTP/1.1

### 新增虛擬點位
# POST {{host}}/api/points HTTP/1.1
# content-type: application/json
# 
# {
#   "name": "新虛擬點位",
#   "description": "測試用虛擬點位",
#   "datatype": "float",
#   "initvalue": 0.0,
#   "opt": "NONE",
#   "savetype": "temp",
#   "enable": true,
#   "correctionvalue": 0.0,
#   "ptuuids": []
# }

### 更新虛擬點位
PUT {{host}}/api/points/4c3cd3e5-17ff-4b73-bee1-4613cabc561a HTTP/1.1
content-type: application/json

{
  "name": "更新的點位名稱",
  "description": "已更新的虛擬點位",
  "datatype": "float",
  "initvalue": 10.5,
  "opt": "NONE",
  "savetype": "temp",
  "enable": true,
  "correctionvalue": 1.0,
  "ptuuids": []
}

### 刪除虛擬點位
DELETE {{host}}/api/points/06bc1d2b-97ec-44c6-b907-a8a4a850465e HTTP/1.1

### =============================================================================
### 任務管理 API (Task Management)
### =============================================================================

### 取得所有任務
GET {{host}}/api/tasks HTTP/1.1

### 根據名稱取得特定任務
GET {{host}}/api/tasks/TP100溫度計_area1 HTTP/1.1

### 新增 Modbus TCP 任務
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "test_modbus_task",
    "function": "read_holding_registers",
    "address": 1000,
    "quantity": 3,
    "interval_ms": 2000,
    "slaveid": 1,
    "protocoluuid": "92610415-1da7-4747-a794-1b6fe0f9b0be",
    "ptuuids": [
        "4c3cd3e5-17ff-4b73-bee1-4613cabc561a",
        "f0de346d-256f-48ea-833d-0ae8f90599da",
        "9be23149-0d76-40b2-84dc-8c2b17a446ad"
    ]
}

### 新增 SNMP 任務
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "test_snmp_task",
    "start_oid": ".1.3.6.1.2.1.1.5.0",
    "oid_num": 2,
    "interval_ms": 3000,
    "uuid": "e4c8f1d3-3e88-48eb-9484-b2be5af133ed",
    "ptuuids": [
        "fe8f1057-cd0c-4164-9fa7-15de203484ce",
        "719baf2c-5ba7-44f4-87ec-0531f272f073"
    ]
}

### 更新任務
PUT {{host}}/api/tasks/test_modbus_task HTTP/1.1
content-type: application/json

{
    "name": "updated_modbus_task",
    "function": "read_holding_registers",
    "address": 1100,
    "quantity": 2,
    "interval_ms": 2500,
    "slaveid": 1,
    "ptuuids": [
        "4c3cd3e5-17ff-4b73-bee1-4613cabc561a",
        "f0de346d-256f-48ea-833d-0ae8f90599da"
    ]
}

### 刪除任務
DELETE {{host}}/api/tasks/test_snmp_task HTTP/1.1

### 新增 Modbus TCP 任務（自動分配點位）
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "test_modbus_task_auto",
    "function": "read_holding_registers",
    "address": 2000,
    "quantity": 3,
    "interval_ms": 1500,
    "slaveid": 1,
    "uuid": "49b72b9a-7643-45f6-8394-35e394800470"
}

### 新增 SNMP 任務（自動分配點位）
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "test_snmp_task_auto",
    "start_oid": ".1.3.6.1.2.1.1.5.0",
    "oid_num": 2,
    "interval_ms": 2500,
    "uuid": "e4c8f1d3-3e88-48eb-9484-b2be5af133ed"
}

### 新增 Modbus RTU 任務（自動分配點位）
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "test_rtu_task_auto",
    "function": "read_holding_registers", 
    "address": 3000,
    "quantity": 6,
    "interval_ms": 1800,
    "slaveid": 3,
    "uuid": "396b4bda-8eb3-46e9-801f-1a10a90252e9"
}

### 錯誤測試：Modbus 任務 quantity 與 ptuuids 數量不符
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "invalid_modbus_task",
    "function": "read_holding_registers",
    "address": 1000,
    "quantity": 3,
    "interval_ms": 2000,
    "slaveid": 1,
    "uuid": "49b72b9a-7643-45f6-8394-35e394800470",
    "ptuuids": [
        "4c3cd3e5-17ff-4b73-bee1-4613cabc561a",
        "f0de346d-256f-48ea-833d-0ae8f90599da"
    ]
}

### 錯誤測試：SNMP 任務 oid_num 與 ptuuids 數量不符
POST {{host}}/api/tasks HTTP/1.1
content-type: application/json

{
    "name": "invalid_snmp_task", 
    "start_oid": ".1.3.6.1.2.1.1.3.0",
    "oid_num": 2,
    "interval_ms": 3000,
    "uuid": "e4c8f1d3-3e88-48eb-9484-b2be5af133ed",
    "ptuuids": [
        "fe8f1057-cd0c-4164-9fa7-15de203484ce",
        "719baf2c-5ba7-44f4-87ec-0531f272f073",
        "beb3b7f0-1014-44e4-9eb6-8ba954f6ed68"
    ]
}

### =============================================================================
### Modbus Slave API (Modbus TCP Slave 管理)
### =============================================================================

### 獲取當前狀態
GET {{host}}/api/modbus-slave/status HTTP/1.1

### 獲取 Modbus Slave 設定
GET {{host}}/api/modbus-slave/config HTTP/1.1

### 更新 Modbus Slave 設定
PUT {{host}}/api/modbus-slave/config HTTP/1.1
Content-Type: application/json

{
  "enabled": true,
  "port": 5020,
  "max_registers": 1000,
  "address_offset": 1,
  "auto_map_enabled": true,
  "update_interval_ms": 1000
}

### 啟動 Modbus Slave 服務（使用自定義配置）
POST {{host}}/api/modbus-slave/start HTTP/1.1
Content-Type: application/json

{
  "enabled": true,
  "port": 5020,
  "max_registers": 1000,
  "address_offset": 1,
  "auto_map_enabled": true,
  "update_interval_ms": 1000
}

### 啟動 Modbus Slave 服務（使用預設配置）
POST {{host}}/api/modbus-slave/start HTTP/1.1
Content-Type: application/json

{}

### 重新映射所有虛擬點位（按照 Points 陣列順序）
POST {{host}}/api/modbus-slave/remap HTTP/1.1

### 查看 Modbus Slave 狀態和詳細映射信息
GET {{host}}/api/modbus-slave/status HTTP/1.1

### 手動添加點位映射
POST {{host}}/api/modbus-slave/mapping HTTP/1.1
Content-Type: application/json

{
  "uuid": "12345678-1234-1234-1234-123456789abc",
  "address": 100
}

### 移除點位映射（替換 uuid 為實際的 UUID）
DELETE {{host}}/api/modbus-slave/mapping/12345678-1234-1234-1234-123456789abc HTTP/1.1

### 停止 Modbus Slave 服務
POST {{host}}/api/modbus-slave/stop HTTP/1.1

### =============================================================================
### 任務管理注意事項 (Task Management Notes)
### =============================================================================
# 1. DeviceUUID 必須存在於 devices.json 中
# 2. Modbus 任務：quantity 必須等於 ptuuids 的數量
# 3. SNMP 任務：oid_num 必須等於 ptuuids 的數量  
# 4. ptuuids 中的 UUID 必須存在於 points.json 中
# 5. interval_ms 必須大於 0
# 6. Modbus 任務需要 function、address、quantity 欄位
# 7. SNMP 任務需要 start_oid、oid_num 欄位
# 8. 支援的 Modbus function：read_holding_registers、read_discrete_inputs 等
# 
# 【新功能：自動分配點位】
# 9. 如果不提供 ptuuids 陣列，系統會根據 quantity 或 oid_num 自動分配可用點位
# 10. 自動分配只選擇 enable=true 且尚未被其他任務使用的點位
# 11. 如果可用點位不足，會回傳錯誤訊息
# 12. 優先順序：手動指定 ptuuids > 自動分配

### =============================================================================
### Modbus Slave 注意事項 (Modbus Slave Notes)
### =============================================================================
# 1. 此實現僅支援讀取功能（只讀模式）
# 2. Modbus 客戶端只能使用功能碼 03 (讀取 Holding Registers)
# 3. 不支援寫入功能碼 06 和 16
# 4. 虛擬點位的 RealValue 會同步到 Modbus 寄存器供讀取
# 
# 【重要更新：按陣列順序映射】
# 5. Modbus Slave 地址映射現在按照 Points 陣列的順序進行分配
# 6. Points[0] 對應到 address_offset 指定的起始地址
# 7. Points[1] 對應到下一個可用地址，依此類推
# 8. 只有 enable=true 的點位會被映射到 Modbus 地址
# 9. 不同資料類型佔用不同數量的寄存器：
#    - BOOL/INT16/UINT16: 1 個寄存器
#    - INT/FLOAT: 2 個寄存器
#    - STRING: 4 個寄存器（預設）
# 10. 使用 GET /api/modbus-slave/status 可查看詳細映射信息
# 11. detailed_mappings 欄位包含每個點位的陣列索引和 Modbus 地址對應關係
# 3. 不支援寫入功能碼 06 和 16
# 4. 虛擬點位的 RealValue 會同步到 Modbus 寄存器供讀取
# 5. 預設監聽埠為 5020，可以透過設定變更
# 6. 支援自動映射和手動映射兩種模式
